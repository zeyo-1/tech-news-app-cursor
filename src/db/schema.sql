CREATE TABLE categories (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  slug VARCHAR(255) NOT NULL UNIQUE,\n  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE subcategories (\n  id SERIAL PRIMARY KEY,\n  category_id INTEGER REFERENCES categories(id),\n  name VARCHAR(255) NOT NULL,\n  slug VARCHAR(255) NOT NULL UNIQUE,\n  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE news (\n  id SERIAL PRIMARY KEY,\n  title TEXT NOT NULL,\n  content TEXT NOT NULL,\n  summary TEXT,\n  source_url TEXT,\n  source_name VARCHAR(255),\n  published_at TIMESTAMP WITH TIME ZONE,\n  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n  updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE news_categories (\n  news_id INTEGER REFERENCES news(id),\n  category_id INTEGER REFERENCES categories(id),\n  subcategory_id INTEGER REFERENCES subcategories(id),\n  PRIMARY KEY (news_id, category_id)\n);\n\nCREATE TABLE users (\n  id UUID REFERENCES auth.users ON DELETE CASCADE,\n  email VARCHAR(255) NOT NULL UNIQUE,\n  role VARCHAR(50) DEFAULT \"user\",\n  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n  PRIMARY KEY (id)\n);\n\n-- エラーログテーブル\nCREATE TABLE error_logs (\n  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,\n  error_type VARCHAR(50) NOT NULL,\n  message TEXT NOT NULL,\n  stack_trace TEXT,\n  metadata JSONB,\n  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n  resolved_at TIMESTAMP WITH TIME ZONE,\n  resolved_by UUID REFERENCES profiles(id),\n  severity VARCHAR(20) DEFAULT 'error'\n);\n\n-- アクティビティログテーブル\nCREATE TABLE activity_logs (\n  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,\n  action VARCHAR(100) NOT NULL,\n  details TEXT,\n  user_id UUID REFERENCES profiles(id),\n  metadata JSONB,\n  ip_address VARCHAR(45),\n  user_agent TEXT,\n  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP\n);\n\n-- ヘルスチェックテーブル\nCREATE TABLE health (\n  id SERIAL PRIMARY KEY,\n  check_time TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n  status VARCHAR(20) NOT NULL,\n  details JSONB\n);\n\n-- インデックスの作成\nCREATE INDEX error_logs_created_at_idx ON error_logs(created_at);\nCREATE INDEX error_logs_error_type_idx ON error_logs(error_type);\nCREATE INDEX error_logs_severity_idx ON error_logs(severity);\n\nCREATE INDEX activity_logs_created_at_idx ON activity_logs(created_at);\nCREATE INDEX activity_logs_action_idx ON activity_logs(action);\nCREATE INDEX activity_logs_user_id_idx ON activity_logs(user_id);\n\n-- RLSポリシーの設定\nALTER TABLE error_logs ENABLE ROW LEVEL SECURITY;\nALTER TABLE activity_logs ENABLE ROW LEVEL SECURITY;\nALTER TABLE health ENABLE ROW LEVEL SECURITY;\n\n-- 管理者のみがアクセス可能なポリシーを作成\nCREATE POLICY admin_error_logs ON error_logs\n  FOR ALL\n  TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles\n      WHERE profiles.id = auth.uid()\n      AND profiles.is_admin = true\n    )\n  );\n\nCREATE POLICY admin_activity_logs ON activity_logs\n  FOR ALL\n  TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles\n      WHERE profiles.id = auth.uid()\n      AND profiles.is_admin = true\n    )\n  );\n\nCREATE POLICY admin_health ON health\n  FOR ALL\n  TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles\n      WHERE profiles.id = auth.uid()\n      AND profiles.is_admin = true\n    )\n  );
